from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤–º–µ—Å—Ç–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
def start(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    user_data[user.id] = {"balance": 0, "completed": 0}

    welcome_message = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –∫–æ–Ω—Ç–µ–Ω—Ç.\n\n"
        "üì± –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
    )

    keyboard = [[InlineKeyboardButton("–ù–∞—á–∞—Ç—å üî•", callback_data="start_action")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(welcome_message, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å üî•"
def start_action(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    send_video(query, context)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
def send_video(query, context: CallbackContext) -> None:
    user_id = query.from_user.id
    user_info = user_data[user_id]

    # –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ
    video_path = f"/Users/macbook/Desktop/telegram_bot/video{user_info['completed'] + 1}.mp4"
    print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∏–¥–µ–æ: {video_path}")  # –û—Ç–ª–∞–¥–∫–∞

    try:
        keyboard = [
            [InlineKeyboardButton("–ù—Ä–∞–≤–∏—Ç—Å—è üëç (10 —Ä—É–±)", callback_data="like"),
             InlineKeyboardButton("–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è üëé (10 —Ä—É–±)", callback_data="dislike")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        context.bot.send_video(chat_id=user_id, video=open(video_path, "rb"), caption="–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é:", reply_markup=reply_markup)
        print(f"–í–∏–¥–µ–æ {video_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except FileNotFoundError:
        print(f"–û—à–∏–±–∫–∞: –í–∏–¥–µ–æ {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        query.edit_message_text("–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ "–ù—Ä–∞–≤–∏—Ç—Å—è" –∏–ª–∏ "–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è"
def handle_reaction(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()

    user_id = query.from_user.id
    user_info = user_data[user_id]

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    user_info["balance"] += 10
    user_info["completed"] += 1

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–ª–∞–Ω—Å–µ
    balance_text = (
        f"–í–∞—à –±–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω —Å {user_info['balance'] - 10} –¥–æ {user_info['balance']} —Ä—É–±\n\n"
        f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {user_info['completed']} –∏–∑ 4\n"
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {user_info['balance']} —Ä—É–±"
    )
    query.edit_message_text(balance_text)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–µ–æ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    if user_info["completed"] < 4:
        send_video(query, context)
    else:
        query.edit_message_text("–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    updater = Updater("7980145475:AAGP1_CfcLErdmK0aIsPOhTOiCAFCpJiqvU")
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(start_action, pattern="^start_action$"))
    dispatcher.add_handler(CallbackQueryHandler(handle_reaction, pattern="^(like|dislike)$"))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
