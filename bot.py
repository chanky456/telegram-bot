import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤–º–µ—Å—Ç–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
def start(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    user_data[user.id] = {"balance": 0, "completed": 0}

    welcome_message = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
        "üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –∫–æ–Ω—Ç–µ–Ω—Ç.\n\n"
        "üì± –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
    )

    keyboard = [[InlineKeyboardButton("–ù–∞—á–∞—Ç—å üî•", callback_data="start_action")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(welcome_message, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å üî•"
def start_action(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    send_video(query, context)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
def send_video(query, context: CallbackContext) -> None:
    user_id = query.from_user.id
    user_info = user_data[user_id]

    video_path = f"video{user_info['completed'] + 1}.mp4"
    print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ: {video_path}")  # –û—Ç–ª–∞–¥–∫–∞

    if not os.path.exists(video_path):
        print(f"–û—à–∏–±–∫–∞: –í–∏–¥–µ–æ {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        query.edit_message_text("–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    try:
        with open(video_path, "rb") as video_file:
            keyboard = [
                [InlineKeyboardButton("–ù—Ä–∞–≤–∏—Ç—Å—è üëç (10 —Ä—É–±)", callback_data="like"),
                 InlineKeyboardButton("–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è üëé (10 —Ä—É–±)", callback_data="dislike")],
                [InlineKeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="finish")]
            ]

            reply_markup = InlineKeyboardMarkup(keyboard)

            context.bot.send_video(chat_id=user_id, video=video_file, caption="–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é:", reply_markup=reply_markup)
            print(f"–í–∏–¥–µ–æ {video_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ "–ù—Ä–∞–≤–∏—Ç—Å—è" –∏–ª–∏ "–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è"
def handle_reaction(update: Update, context: CallbackContext) -> None:
    try:
        query = update.callback_query
        print(f"–ü–æ–ª—É—á–µ–Ω callback_data: {query.data}")  # –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        query.answer()

        user_id = query.from_user.id
        user_info = user_data.get(user_id, {"balance": 0, "completed": 0})

        if query.data in ["like", "dislike"]:
            user_info["balance"] += 10
            user_info["completed"] += 1
            user_data[user_id] = user_info  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            balance_text = (f"–í–∞—à –±–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω —Å {user_info['balance'] - 10} –¥–æ {user_info['balance']} —Ä—É–±\n\n"
                            f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {user_info['completed']} –∏–∑ 4\n"
                            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {user_info['balance']} —Ä—É–±")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            query.message.reply_text(balance_text)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ
            if user_info["completed"] < 4:
                send_video(query, context)
            else:
                query.message.reply_text("–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!")
        elif query.data == "finish":
            query.message.reply_text("–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_reaction: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler

def main():
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.environ.get("TELEGRAM_BOT_TOKEN")
    updater = Updater(token)

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∫–æ–º–∞–Ω–¥
    dispatcher = updater.dispatcher
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(start_action, pattern="^start_action$"))
    dispatcher.add_handler(CallbackQueryHandler(handle_reaction, pattern="^(like|dislike|finish)$"))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–∞ –∏ –≤–µ–±—Ö—É–∫–æ–≤
    port = int(os.environ.get('PORT', 8443))  # –ü–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8443
    webhook_url = f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/webhook"

    updater.start_webhook(
        listen="0.0.0.0",  # –°–ª—É—à–∞–µ—Ç –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        port=port,
        url_path="webhook"  # –í–µ–±—Ö—É–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—É—Ç–∏ /webhook
    )
    updater.bot.set_webhook(webhook_url)

    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ–±—Ö—É–∫–∏: {webhook_url}")
    updater.idle()

