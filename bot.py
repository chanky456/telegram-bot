from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤–º–µ—Å—Ç–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    user_data[user.id] = {"balance": 0, "completed": 0, "bonus_given": False}

    welcome_text = (f"\U0001F44B {user.first_name}\n\n"
                    "\U0001F525 –ú—ã —Å–æ–µ–¥–∏–Ω—è–µ–º –∞–≤—Ç–æ—Ä–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ TikTok –∏ –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. "
                    "–ó–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –¥–µ–Ω—å–≥–∏.\n\n"
                    "\U0001F440 –ú—ã –ø–ª–∞—Ç–∏–º 10 —Ä—É–±–ª–µ–π –∑–∞ –∫–∞–∂–¥—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä.\n\n"
                    "‚úÖ –ù–∞–∂–º–∏—Ç–µ ¬´–ì–æ—Ç–æ–≤–æ¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏.")

    keyboard = [
        [InlineKeyboardButton("–ì–æ—Ç–æ–≤–æ", callback_data="ready")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(welcome_text, reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ì–æ—Ç–æ–≤–æ"
def ready(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()

    ready_text = ("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.\n\n"
                  "‚ùó –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç. –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.\n\n"
                  "‚ùó –ù–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ—Å–º–æ—Ç—Ä¬ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–¥—Ä—è–¥. –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –µ—ë —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤–∞—à –ø—Ä–æ—Å–º–æ—Ç—Ä –±—É–¥–µ—Ç —É—á—Ç–µ–Ω.")

    query.edit_message_text(ready_text)
    send_video(query, context)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
def send_video(query, context: CallbackContext) -> None:
    user_id = query.from_user.id
    user_info = user_data[user_id]

    video_path = f"video{user_info['completed'] + 1}.mp4"
    print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ: {video_path}")

    try:
        keyboard = [
            [InlineKeyboardButton("–ú–Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å (10 —Ä—É–±)", callback_data="like"),
             InlineKeyboardButton("–ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å (10 —Ä—É–±)", callback_data="dislike")],
            [InlineKeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="finish")]
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)

        context.bot.send_video(chat_id=user_id, video=open(video_path, "rb"), caption="–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é.", reply_markup=reply_markup)
        print(f"–í–∏–¥–µ–æ {video_path} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except FileNotFoundError:
        print(f"–û—à–∏–±–∫–∞: –í–∏–¥–µ–æ {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        query.edit_message_text("–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–∫—Ü–∏–∏
def handle_reaction(update: Update, context: CallbackContext) -> None:
    try:
        query = update.callback_query
        print(f"–ü–æ–ª—É—á–µ–Ω callback_data: {query.data}")
        query.answer()

        user_id = query.from_user.id
        if user_id not in user_data:
            user_data[user_id] = {"balance": 0, "completed": 0, "bonus_given": False}

        user_info = user_data[user_id]

        if query.data in ["like", "dislike"]:
            user_info["balance"] += 10
            user_info["completed"] += 1

            balance_text = (f"–í–∞—à –±–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω —Å {user_info['balance'] - 10} –¥–æ {user_info['balance']} —Ä—É–±\n\n"
                            f"üì± –°—Ç–∞–≤–∫–∞ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä: 10 —Ä—É–±\n\n"
                            f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {user_info['completed']} –∏–∑ 4\n"
                            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {user_info['balance']} —Ä—É–±")

            query.edit_message_text(balance_text)

            if user_info["completed"] < 4:
                send_video(query, context)
            else:
                query.edit_message_text("–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!")

        elif query.data == "finish":
            query.edit_message_text("–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_reaction: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    updater = Updater("7980145475:AAGP1_CfcLErdmK0aIsPOhTOiCAFCpJiqvU")

    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(ready, pattern="^ready$"))
    dispatcher.add_handler(CallbackQueryHandler(handle_reaction, pattern="^(like|dislike|finish)$"))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    updater.start_polling(timeout=5)
    updater.idle()

if __name__ == "__main__":
    main()
